stages:
  - build
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cat .gitignore >> .dockerignore
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY_IMAGE${tag}"
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

approve:
  stage: build
  script:
    - echo "This build will be deployed on production"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - docker-stack.prod.yml
      when: manual

portainer-deploy:
  stage: deploy
  needs:
    - docker-build
  image: registry.bykollab.com/kollab/infra/gitlab-portainer-deploy:latest
  variables:
    PORTAINER_STACK_NAME: "${CI_PROJECT_NAMESPACE}_${CI_PROJECT_NAME}"
    PORTAINER_ENV: "${TEST_ENV}\nCI_PROJECT_NAMESPACE=${CI_PROJECT_NAMESPACE}\nCI_PROJECT_NAME=${CI_PROJECT_NAME}"
    PORTAINER_GIT_USERNAME: "gitlab-ci-token"
    PORTAINER_GIT_PASSWORD: "${CI_JOB_TOKEN}"
  script:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - docker-stack.yml

production-deploy:
  stage: deploy
  needs:
    - docker-build
    - approve
  image: registry.bykollab.com/kollab/infra/gitlab-portainer-deploy:latest
  environment:
    name: production
  variables:
    PORTAINER_STACK_NAME: "prod_${CI_PROJECT_NAMESPACE}_${CI_PROJECT_NAME}"
    PORTAINER_STACK_FILE: docker-stack.prod.yml
    PORTAINER_ENV: "${PROD_ENV}\nCI_PROJECT_NAMESPACE=${CI_PROJECT_NAMESPACE}\nCI_PROJECT_NAME=${CI_PROJECT_NAME}\nPROD_VERSION=${CI_COMMIT_SHORT_SHA}"
    PORTAINER_GIT_USERNAME: "gitlab-ci-token"
    PORTAINER_GIT_PASSWORD: "${CI_JOB_TOKEN}"
    PROD_VERSION: ${CI_COMMIT_SHORT_SHA}
  script:
    - deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - docker-stack.prod.yml
